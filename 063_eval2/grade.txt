Grading at 10/28/2024:14:35:20.523482
For commit ID 876d929913a7e164016ad3fc2851dfcb6e56a77a
Grading at Mon Oct 28 10:34:58 AM EDT 2024
Doing some basic checking for your submission

Step 1
Checking that story-step1 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4  story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step1.c
gcc -o story-step1 story-step1.o rand_story.o provided.o
rm story-step1.o
The code compiled (good)
Executable story-step1 exists (good)
Checking with provided test case story.txt
Your file matched the expected output
Now running YOUR tests for step 1

1.1: Current test is story-step1 st_sd.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

1.2: Current test is story-step1 st_num.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

1.3: Current test is story-step1 st_xnum.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

1.4: Current test is story-step1 st_wrong.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

Step 2
Checking that story-step2 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4  story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step2.c
gcc -o story-step2 story-step2.o rand_story.o provided.o
rm story-step2.o
The code compiled (good)
Executable story-step2 exists (good)
Now running YOUR tests for step 2

2.1: Current test is story-step2 words_sd.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

2.2: Current test is story-step2 words_sdrp.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

2.3: Current test is story-step2 words_wrong.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

Step 3
Checking that story-step3 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4  story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step3.c
gcc -o story-step3 story-step3.o rand_story.o provided.o
rm story-step3.o
The code compiled (good)
Executable story-step3 exists (good)
Now running YOUR tests for step 3

3.1: Current test is story-step3 words_sd.txt st_sd.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

3.2: Current test is story-step3 words_sd.txt st_num.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

3.3: Current test is story-step3 words_sd.txt st_xnum.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.4: Current test is story-step3 words_sd.txt st_wrong.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.5: Current test is story-step3 words_sdrp.txt st_sd.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

3.6: Current test is story-step3 words_sdrp.txt st_num.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

3.7: Current test is story-step3 words_sdrp.txt st_xnum.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.8: Current test is story-step3 words_sdrp.txt st_wrong.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.9: Current test is story-step3 words_wrong.txt st_sd.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.10: Current test is story-step3 words_wrong.txt st_num.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.11: Current test is story-step3 words_wrong.txt st_xnum.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

3.12: Current test is story-step3 words_wrong.txt st_wrong.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

Step 4
Checking that story-step4 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4  story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step4.c
gcc -o story-step4 story-step4.o rand_story.o provided.o
rm story-step4.o
The code compiled (good)
Executable story-step4 exists (good)
Now running YOUR tests for step 4

4.1: Current test is story-step4 -n words_sd.txt st_sd.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

4.2: Current test is story-step4 -n words_sd.txt st_num.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

4.3: Current test is story-step4 -n words_sd.txt st_xnum.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

4.4: Current test is story-step4 -n words_sd.txt st_wrong.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

4.5: Current test is story-step4 -n words_sdrp.txt st_sd.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

4.6: Current test is story-step4 -n words_sdrp.txt st_num.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

4.7: Current test is story-step4 -n words_sdrp.txt st_xnum.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

4.8: Current test is story-step4 -n words_sdrp.txt st_wrong.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

4.9: Current test is story-step4 -n words_wrong.txt st_sd.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

4.10: Current test is story-step4 -n words_wrong.txt st_num.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

4.11: Current test is story-step4 -n words_wrong.txt st_xnum.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

4.12: Current test is story-step4 -n words_wrong.txt st_wrong.txt
-----------------------------
Great: we both considered this an error
Lets check if it valgrinds:
Valgrind was clean

4.13: Current test is story-step4 -n words11.txt story11.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

4.14: Current test is story-step4 -n words10.txt story10.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

4.15: Current test is story-step4 words11.txt story11.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

4.16: Current test is story-step4 words10.txt story10.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

You have passed the test cases YOU provided
If your tests are good, this is great. 
If your tests are insufficient, you should do much more testing

Overall Grade: NO GRADE YET
